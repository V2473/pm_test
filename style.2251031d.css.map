{"version":3,"sources":["style.scss","styles/header.scss","../node_modules/include-media/dist/_include-media.scss","styles/main.scss","styles/footer.scss"],"names":[],"mappings":"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","file":"style.2251031d.css","sourceRoot":"../src","sourcesContent":["@import \"./node_modules/include-media/dist/include-media\";\n\n@font-face {\n  font-family: \"Circe\";\n  src: url(\"./fonts/Circe-Regular.ttf\");\n}\n\n$breakpoints: (phone: 768px, tablet: 1024px, desktop: 1440px, wide: 1920px);\n\n@import \"./styles/header.scss\";\n@import \"./styles/main.scss\";\n@import \"./styles/footer.scss\";\n\nbody {\n  font-family: \"Circe\", sans-serif;\n  margin: 0;\n}\n",".header {\r\n  color: #fff;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  max-width: 3200px;\r\n  margin: auto;\r\n\r\n  & h3 {\r\n    // position: relative;\r\n    font-weight: 300;\r\n    font-size: 30px;\r\n    line-height: 44px;\r\n    text-transform: capitalize;\r\n\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      margin: 21px 20px 0;\r\n      height: 10px;\r\n      width: calc(100% - 160px);\r\n      border-top: 1px solid white;\r\n    }\r\n\r\n    @include media(\"<tablet\") {\r\n      font-size: 20px;\r\n      line-height: 29px;\r\n      margin-top: 60px;\r\n\r\n      &::after {\r\n        margin: 15px 20px 0;\r\n        width: calc(100% - 130px);\r\n      }\r\n    }\r\n  }\r\n\r\n  & h1 {\r\n    font-weight: bold;\r\n    font-size: 60px;\r\n    line-height: 88px;\r\n    text-transform: capitalize;\r\n\r\n    @include media(\">tablet\", \"<desktop\") {\r\n      line-height: 50px;\r\n\r\n    }\r\n\r\n    @include media(\"<tablet\") {\r\n      font-size: 40px;\r\n      line-height: 59px;\r\n    }\r\n  }\r\n\r\n  & p {\r\n    font-weight: 300;\r\n    font-size: 20px;\r\n    line-height: 29px;\r\n\r\n    @include media(\"<tablet\") {\r\n      font-size: 16px;\r\n      line-height: 24px;\r\n    }\r\n  }\r\n\r\n  &__info {\r\n    position: absolute;\r\n    top: 40px;\r\n    margin: 40px 200px;\r\n    width: 471px;\r\n\r\n    @include media(\">2700px\") {\r\n      margin: 40px 500px;\r\n      width: 700px;\r\n    }\r\n\r\n    @include media(\">tablet\", \"<desktop\") {\r\n      margin: 40px 100px;\r\n      width: 350px;\r\n    }\r\n\r\n    @include media(\"<tablet\") {\r\n      top: 320px;\r\n      left: 0;\r\n      margin: 0 16px;\r\n      width: fit-content;\r\n    }\r\n  }\r\n\r\n  &__logo {\r\n    width: 217px;\r\n    height: 52px;\r\n    background-image: url(\"./img/Logo.svg\");\r\n    background-repeat: no-repeat;\r\n    margin-bottom: 150px;\r\n\r\n    @include media(\">tablet\", \"<desktop\") {\r\n      margin-bottom: 90px;\r\n    }\r\n\r\n    @include media(\"<tablet\") {\r\n      width: 166px;\r\n      height: 40px;\r\n      margin: 0 auto;\r\n    }\r\n  }\r\n\r\n  &__bg_wrapper {\r\n    position: relative;\r\n    height: 814px;\r\n    overflow: hidden;\r\n\r\n    @include media(\"<tablet\") {\r\n      height: 700px;\r\n      overflow: visible;\r\n    }\r\n\r\n    &__img {\r\n      position: absolute;\r\n      top: -9999px;\r\n      bottom: -9899px;\r\n      left: -8586px;\r\n      right: -9999px;\r\n      margin: auto;\r\n      padding-left: 0;\r\n      height: 714px;\r\n      width: 1614px;\r\n      clip-path: url(#rect);\r\n      background-image: url(\"./img/Header.jpg\");\r\n      background-attachment: fixed;\r\n      background-position: right;\r\n      background-repeat: no-repeat;\r\n      background-size: cover;\r\n\r\n      @include media(\"<tablet\") {\r\n        position: relative;\r\n        top: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        right: 0;\r\n        padding: 0;\r\n        margin: 0 45px 0 0;\r\n        height: 300px;\r\n        width: 100%;\r\n        clip-path: none;\r\n        background-position: top;\r\n        z-index: -1;\r\n      }\r\n    }\r\n\r\n    &__blue_rect {\r\n      position: absolute;\r\n    \r\n      top: -9999px;\r\n      bottom: -9899px;\r\n      left: -9999px;\r\n      right: -8786px;\r\n      margin: auto;\r\n      height: 714px;\r\n      width: 1614px;\r\n      background-image: url(\"./img/Rectangle_1.svg\");\r\n      background-repeat: no-repeat;\r\n      filter: drop-shadow(0 20px 20px rgba(17, 58, 150, 0.3));\r\n      float: left;\r\n\r\n      @include media(\"<tablet\") {\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 518px;\r\n        left: 0;\r\n        top: 279px;\r\n        right: 0;\r\n        bottom: 0;\r\n        margin-top: 0;\r\n\r\n        background: linear-gradient(239.51deg, #30bef2 13.56%, #3e77f4 70.3%);\r\n        box-shadow: 0 20px 80px rgba(17, 58, 150, 0.3);\r\n        border-radius: 20px 20px 0 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//                http://include-media.com\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Hugo Giraudel (@hugogiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n\n\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      // scss-lint:disable SpaceAroundOperator\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Hugo Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Hugo Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  // scss-lint:disable SpaceAroundOperator\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}\n","main {\r\n  width: 100vw;\r\n  height: 1290px;\r\n  overflow-x: hidden;\r\n  overflow-y: visible;\r\n\r\n  @include media(\">2500px\") {\r\n    height: 1500px;\r\n  }\r\n\r\n  @include media(\"<tablet\") {\r\n    height: fit-content;\r\n  }\r\n}\r\n\r\n.what-we-do {\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  align-items: center;\r\n\r\n  max-width: 1200px;\r\n\r\n  margin: 0 auto;\r\n\r\n  @include media(\"<tablet\") {\r\n    margin: 100px auto;\r\n  }\r\n\r\n  & h2 {\r\n    margin-top: 10px;\r\n    width: 100%;\r\n\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    font-size: 50px;\r\n    line-height: 74px;\r\n    text-align: center;\r\n    text-transform: capitalize;\r\n\r\n    @include media(\"<tablet\") {\r\n      margin-top: 100px;\r\n\r\n      font-size: 35px;\r\n      line-height: 52px;\r\n    }\r\n  }\r\n\r\n  &__item {\r\n    display: flex;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    text-align: center;\r\n    align-items: center;\r\n\r\n    flex: 1 1 20%;\r\n    max-width: 264px;\r\n    margin: 0 auto;\r\n\r\n    @include media(\"<tablet\") {\r\n      flex: 1 0 100%;\r\n      max-width: 100%;\r\n    }\r\n\r\n    & h4 {\r\n      text-align: center;\r\n      margin: auto;\r\n    }\r\n\r\n    &-img {\r\n      width: 100px;\r\n      height: 100px;\r\n      margin-bottom: 24px;\r\n      margin-top: 20px;\r\n\r\n      &1 {\r\n        @extend .what-we-do__item-img;\r\n        background-image: url(./img/item1.svg);\r\n      }\r\n\r\n      &2 {\r\n        @extend .what-we-do__item-img;\r\n        background-image: url(./img/item2.svg);\r\n      }\r\n\r\n      &3 {\r\n        @extend .what-we-do__item-img;\r\n        background-image: url(./img/item3.svg);\r\n      }\r\n\r\n      &4 {\r\n        @extend .what-we-do__item-img;\r\n        background-image: url(./img/item4.svg);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.why-us {\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  max-width: 1000px;\r\n  margin: 200px auto 0;\r\n\r\n  @include media(\"<tablet\") {\r\n    flex-direction: column;\r\n    margin: 150px 16px 0;\r\n\r\n  }\r\n\r\n  &__info {\r\n    flex: 1 0 50%;\r\n    // height: max-content;\r\n\r\n    @include media(\"<tablet\") {\r\n      order: 2;\r\n      flex: 1 0 100%;\r\n    }\r\n\r\n    & h2 {\r\n      font-style: normal;\r\n      font-weight: bold;\r\n      font-size: 50px;\r\n      line-height: 74px;\r\n  \r\n      text-transform: capitalize;\r\n  \r\n      color: #343638;\r\n\r\n      @include media(\"<tablet\") {\r\n        margin-top: 100px;\r\n        text-align: center;\r\n      }\r\n    }\r\n\r\n    & p {\r\n      max-width: 438px;\r\n\r\n      font-style: normal;\r\n      font-weight: normal;\r\n      font-size: 20px;\r\n      line-height: 29px;\r\n\r\n      color: #343638;\r\n\r\n      @include media(\"<tablet\") {\r\n        margin-bottom: 100px;\r\n        max-width: 100%;\r\n      }\r\n    }\r\n  }\r\n  \r\n  &__img {\r\n    position: relative;\r\n    width: 566px;\r\n    height: 477px;\r\n\r\n    flex: 1 0 50%;\r\n    left: -50px;\r\n    border-radius: 0 0 100px;\r\n\r\n    background-image: url(\"./img/Main.jpg\");\r\n    background-size: cover;\r\n\r\n    @include media(\"<tablet\") {\r\n      display: block;\r\n      width: calc(100% + 32px);\r\n\r\n      position: relative;\r\n      flex: 0 0 auto;\r\n      order: 1;\r\n      left: -16px;\r\n      top: 0;\r\n      background-position: center;\r\n    }\r\n\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: -150px;\r\n      left: 100px;\r\n      width: 700px;\r\n      height: 700px;\r\n      background-image: url(\"./img/Rectangle_7.svg\");\r\n      background-repeat: no-repeat;\r\n      z-index: -1;\r\n    }\r\n  }\r\n}\r\n\r\n.ring_main {\r\n  position: absolute;\r\n  width: 300px;\r\n  height: 300px;\r\n  top: 330px;\r\n  left: -160px;\r\n  background-image: url(\"./img/Main.svg\");\r\n  // filter: hue-rotate(-70deg);\r\n\r\n}\r\n","footer {\r\n  position: relative;\r\n  // background-color: #f0f2f5;\r\n  max-width: 100vw;\r\n  // z-index: 1;\r\n  overflow-x: hidden;\r\n  overflow-y: hidden;\r\n  height: max-content;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 100vw;\r\n    height: 100%;\r\n    background-color: #f0f2f5;\r\n    z-index: -2;\r\n    top: 10px;\r\n  }\r\n}\r\n\r\n.contacts {\r\n  display: flex;\r\n  flex-direction: row;\r\n\r\n  max-width: 1000px;\r\n  margin: auto;\r\n  // margin-top: 210px;\r\n  z-index: 0;\r\n\r\n  @include media(\"<tablet\") {\r\n    flex-direction: column;\r\n  }\r\n\r\n  &__img {\r\n    flex: 1 0 50%;\r\n    order: 1;\r\n\r\n    position: relative;\r\n    margin-top: 150px;\r\n    width: 566px;\r\n    height: 564px;\r\n\r\n    left: -80px;\r\n    border-radius: 0 0 0 100px;\r\n\r\n    background-image: url(\"./img/Contacts.jpg\");\r\n    background-size: cover;\r\n    background-position: center;\r\n    // z-index: 1;\r\n\r\n    @include media(\"<tablet\") {\r\n      display: block;\r\n      flex: 0 0 auto;\r\n      margin-top: 150px;\r\n      left: 0;\r\n      width: calc(100% + 32px);\r\n      height: 400px;\r\n    }\r\n\r\n    &::after {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 70px;\r\n      left: -210px;\r\n      width: 700px;\r\n      height: 700px;\r\n      background-image: url(\"./img/Rectangle_7.svg\");\r\n      background-repeat: no-repeat;\r\n      z-index: -1;\r\n      \r\n\r\n      @include media(\"<tablet\") {\r\n        top: -50px;\r\n        left: -250px;\r\n        transform: scale(0.7);\r\n      }\r\n    }\r\n  }\r\n\r\n  &__info {\r\n    flex: 1 0 50%;\r\n    order: 2;\r\n    width: 438px;\r\n\r\n    @include media(\"<tablet\") {\r\n      flex: 0 0 auto;\r\n      margin: 0 16px;\r\n      width: calc(100% - 32px);\r\n    }\r\n\r\n    & h2 {\r\n      margin: 150px auto 24px;\r\n\r\n      font-style: normal;\r\n      font-weight: bold;\r\n      font-size: 50px;\r\n      line-height: 74px;\r\n\r\n      text-transform: capitalize;\r\n\r\n      color: #343638;\r\n\r\n      @include media(\"<tablet\") {\r\n        text-align: center;\r\n      }\r\n    }\r\n\r\n    & p {\r\n      font-style: normal;\r\n      font-weight: normal;\r\n      font-size: 20px;\r\n      line-height: 29px;\r\n\r\n      color: #343638;\r\n\r\n      @include media(\"<tablet\") {\r\n        text-align: center;\r\n      }\r\n    }\r\n\r\n    & input {\r\n      font-family: \"Circe\", sans-serif;\r\n      font-size: 16px;\r\n      line-height: 24px;\r\n      padding: 16px;\r\n      border: none;\r\n      box-sizing: border-box;\r\n      margin-bottom: 16px;\r\n      width: 438px;\r\n      height: 64px;\r\n      background: #fff;\r\n      box-shadow: 0 20px 30px rgba(17, 58, 150, 0.15);\r\n      border-radius: 4px;\r\n      outline: none;\r\n\r\n      @include media(\"<tablet\") {\r\n        width: 100%;\r\n      }\r\n\r\n      &:focus {\r\n        padding-bottom: 15px;\r\n        border-bottom: 1px solid #3e77f4;\r\n      }\r\n    }\r\n\r\n    & textarea {\r\n      font-family: \"Circe\", sans-serif;\r\n      font-size: 16px;\r\n      line-height: 24px;\r\n      padding: 16px;\r\n      border: none;\r\n      box-sizing: border-box;\r\n      margin-bottom: 16px;\r\n      width: 438px;\r\n      height: 128px;\r\n      background: #fff;\r\n      box-shadow: 0 20px 30px rgba(17, 58, 150, 0.15);\r\n      border-radius: 4px;\r\n      outline: none;\r\n\r\n      @include media(\"<tablet\") {\r\n        width: 100%;\r\n      }\r\n\r\n      &:focus {\r\n        padding-bottom: 15px;\r\n        border-bottom: 1px solid #3e77f4;\r\n      }\r\n    }\r\n\r\n    & button {\r\n      width: 438px;\r\n      height: 64px;\r\n      left: 1024px;\r\n      top: 2780px;\r\n\r\n      background: linear-gradient(192.07deg, #30bef2 13.56%, #3e77f4 70.3%);\r\n      // background: #3e77f4;\r\n      box-shadow: 0 20px 80px rgba(17, 58, 150, 0.3);\r\n      border-radius: 4px;\r\n      font-family: \"Circe\", sans-serif;\r\n      font-size: 20px;\r\n      line-height: 29px;\r\n      // display: flex;\r\n      // align-items: center;\r\n      text-transform: capitalize;\r\n\r\n      color: #fff;\r\n      // transition: 0.3s;\r\n\r\n      @include media(\"<tablet\") {\r\n        width: 100%;\r\n      }\r\n\r\n      &:hover {\r\n        background: #3e77f4;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.info {\r\n  position: relative;\r\n  padding: 0 200px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n\r\n  height: 60px;\r\n  background: #7c8da7;\r\n\r\n  max-width: 1600px;\r\n  margin: 150px auto 0;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: 200vw;\r\n    height: 80px;\r\n    background-color: #7c8da7;\r\n    z-index: -2;\r\n    top: 0;\r\n    left: -100vw;\r\n  }\r\n\r\n  @include media(\"<tablet\") {\r\n    height: 124px;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 0;\r\n  }\r\n\r\n  & p {\r\n    margin: 18px 0;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-size: 16px;\r\n    line-height: 24px;\r\n\r\n    color: #fff;\r\n\r\n    &:nth-child(2) {\r\n      @include media(\"<tablet\") {\r\n        order: 1;\r\n        margin-top: 30px;\r\n      }\r\n    }\r\n\r\n    &:nth-child(1) {\r\n      @include media(\"<tablet\") {\r\n        order: 2;\r\n        margin-bottom: 30px;\r\n        margin-top: 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.ring_footer {\r\n  position: relative;\r\n  width: 300px;\r\n  height: 300px;\r\n  top: -60px;\r\n  left: -60px;\r\n  background-image: url(\"./img/ring_footer.svg\");\r\n  background-repeat: no-repeat;\r\n  // filter: hue-rotate(-70deg);\r\n}\r\n"]}